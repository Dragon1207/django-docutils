[tool.poetry]
name = "django-docutils"
version = "0.4.0"
description = "Documentation Utilities (Docutils, reStructuredText) for django.)"

license = "MIT"

authors = [
    "Tony Narlock <tony@git-pull.com>"
]

readme = 'README.rst'  # Markdown files are supported

repository = "https://github.com/tony/django-docutils"
homepage = "https://django-docutils.git-pull.com"
documentation = "https://django-docutils.git-pull.com"

[tool.poetry.urls]
"Issue Tracker" = "https://github.com/tony/django-docutils/issues"

[tool.poetry.dependencies]
python = "^3.5"
Django = ">=2.2"
docutils = "*"
tldextract =  "*"
tqdm = "*"
pygments = "<3"
django-extensions = "^2.2.5"
django-randomslugfield =  "*"
django-slugify-processor = "*"
django-dirtyfields = ">1.3.0"
lxml = "*"
bitly-api = {git = "https://github.com/develtech/bitly-api-python.git", rev = "python-3", optional = true}

[tool.poetry.dev-dependencies]
### Docs ###
sphinx = [
  {version="<2", python="<3"},
  {version="*", python=">=3"}
]
recommonmark = {version = "^0.6.0"}
alagitpull = {version = "^0.0.25-rc.2", allow-prereleases = true}
sphinx-issues = {version = "^1.2.0"}

### Testing ###
pytest = [
  {version="<4.7.0", python="<3"},
  {version="*", python=">=3"}
]
pathlib2 = {version="<2.3.5", python="<3"}  # Untangle pytest peer-dependency
pytest-rerunfailures = "*"
pytest-mock = [
  {version="<3.0.0", python="<3"},
  {version="*", python=">=3"}
]
factory-boy = "^2.12.0"
pytest-factoryboy = "^2.0.3"
pytest-django = "^3.7.0"
dj-inmemorystorage = "^2.0.0"
responses = "^0.10.9"

### Coverage ###
codecov = "*"
coverage = "*"
pytest-cov = [
  {version="<2.10.0", python="<3"},
  {version="*", python=">=3"}
]

### Format ###
black = {version="==19.10b0", python="^3.6"}
isort = [
  {version="<5", python="<3.6"},
  {version="*", python=">=3.6"}
]

### Lint ###
flake8 = "*"

### Deploy ###
twine = "*"

[tool.poetry.extras]
docs = ["sphinx", "sphinx-issues", "alagitpull", "recommonmark"]
test = ["pytest", "pathlib2", "pytest-rerunfailures", "pytest-mock", "factory-boy", "pytest-factoryboy", "pytest-django", "dj-inmemorystorage", "responses"]
coverage = ["codecov", "coverage", "pytest-cov"]
format = ["black", "isort"]
lint = ["flake8"]
deploy = ["deploy"]
favicon = ["tldextract", "tqdm"]
intersphinx = ["tqdm"]

[tool.black]
skip-string-normalization = true
include = '\.pyi?$'
